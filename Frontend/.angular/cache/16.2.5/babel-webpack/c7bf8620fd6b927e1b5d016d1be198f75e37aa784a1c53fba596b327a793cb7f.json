{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DocTruyenComponent = class DocTruyenComponent {\n  showConsoleMessage() {\n    console.log(\"Nút đã được nhấn!\");\n  }\n  changeBackgroundColor() {\n    var color = document.getElementById(\"colorSelect\").value;\n    var colorbg = document.getElementsByClassName(\"story-container\")[0];\n    colorbg.style.backgroundColor = color;\n  }\n  toggleDropdown() {\n    var dropdown = document.getElementById(\"dropdown\");\n    if (dropdown.style.display === \"none\" || dropdown.style.display === \"\") {\n      dropdown.style.display = \"block\";\n    } else {\n      dropdown.style.display = \"none\";\n    }\n  }\n  abc() {\n    let a = document.getElementById('chat-input').value;\n    this.comment.push(a);\n  }\n  constructor(renderer, el) {\n    this.renderer = renderer;\n    this.el = el;\n    this.comment = [];\n  }\n  openForm() {\n    const myForm = this.el.nativeElement.querySelector('#myForm');\n    this.renderer.setStyle(myForm, 'display', 'block');\n  }\n  closeForm() {\n    const myForm = this.el.nativeElement.querySelector('#myForm');\n    this.renderer.setStyle(myForm, 'display', 'none');\n  }\n  changeFont() {\n    var font = document.getElementById(\"fontSelect\").value;\n    var fonta = document.getElementsByClassName(\"story-container\")[0];\n    fonta.style.fontFamily = font;\n  }\n};\nDocTruyenComponent = __decorate([Component({\n  selector: 'app-doc-truyen',\n  templateUrl: './doc-truyen.component.html',\n  styleUrls: ['./doc-truyen.component.css']\n})], DocTruyenComponent);","map":{"version":3,"names":["Component","DocTruyenComponent","showConsoleMessage","console","log","changeBackgroundColor","color","document","getElementById","value","colorbg","getElementsByClassName","style","backgroundColor","toggleDropdown","dropdown","display","abc","a","comment","push","constructor","renderer","el","openForm","myForm","nativeElement","querySelector","setStyle","closeForm","changeFont","font","fonta","fontFamily","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\web_Sach\\websach\\src\\app\\doc-truyen\\doc-truyen.component.ts"],"sourcesContent":["\nimport { Component, Renderer2, ElementRef } from '@angular/core';\n@Component({\n  selector: 'app-doc-truyen',\n  templateUrl: './doc-truyen.component.html',\n  styleUrls: ['./doc-truyen.component.css']\n})\nexport class DocTruyenComponent {\n  showConsoleMessage(): void {\n    console.log(\"Nút đã được nhấn!\");\n  }\n  changeBackgroundColor(): void {\n    var color = (document.getElementById(\"colorSelect\") as HTMLSelectElement).value;\n    var colorbg = (document.getElementsByClassName(\"story-container\")[0] as HTMLDivElement)\n    colorbg.style.backgroundColor = color;\n  }\n  toggleDropdown(): void {\n    var dropdown = ((document.getElementById(\"dropdown\")) as HTMLDivElement);\n    if (dropdown.style.display === \"none\" || dropdown.style.display === \"\") {\n      dropdown.style.display = \"block\";\n    } else {\n      dropdown.style.display = \"none\";\n    }\n  }\n  comment: String[] = []\n  abc(): void {\n    let a = (document.getElementById('chat-input') as HTMLInputElement).value\n    this.comment.push(a)\n  }\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n  openForm(): void {\n    const myForm = this.el.nativeElement.querySelector('#myForm');\n    this.renderer.setStyle(myForm, 'display', 'block');\n  }\n\n  closeForm(): void {\n    const myForm = this.el.nativeElement.querySelector('#myForm');\n    this.renderer.setStyle(myForm, 'display', 'none');\n  }\n  changeFont() {\n    var font = (document.getElementById(\"fontSelect\") as HTMLSelectElement).value;\n    var fonta = (document.getElementsByClassName(\"story-container\")[0] as HTMLDivElement)\n    fonta.style.fontFamily = font;\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAA+B,eAAe;AAMzD,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC7BC,kBAAkBA,CAAA;IAChBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC;EACAC,qBAAqBA,CAAA;IACnB,IAAIC,KAAK,GAAIC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAuB,CAACC,KAAK;IAC/E,IAAIC,OAAO,GAAIH,QAAQ,CAACI,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAoB;IACvFD,OAAO,CAACE,KAAK,CAACC,eAAe,GAAGP,KAAK;EACvC;EACAQ,cAAcA,CAAA;IACZ,IAAIC,QAAQ,GAAKR,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAqB;IACxE,IAAIO,QAAQ,CAACH,KAAK,CAACI,OAAO,KAAK,MAAM,IAAID,QAAQ,CAACH,KAAK,CAACI,OAAO,KAAK,EAAE,EAAE;MACtED,QAAQ,CAACH,KAAK,CAACI,OAAO,GAAG,OAAO;KACjC,MAAM;MACLD,QAAQ,CAACH,KAAK,CAACI,OAAO,GAAG,MAAM;;EAEnC;EAEAC,GAAGA,CAAA;IACD,IAAIC,CAAC,GAAIX,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAsB,CAACC,KAAK;IACzE,IAAI,CAACU,OAAO,CAACC,IAAI,CAACF,CAAC,CAAC;EACtB;EACAG,YAAoBC,QAAmB,EAAUC,EAAc;IAA3C,KAAAD,QAAQ,GAARA,QAAQ;IAAqB,KAAAC,EAAE,GAAFA,EAAE;IALnD,KAAAJ,OAAO,GAAa,EAAE;EAK6C;EACnEK,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,aAAa,CAAC,SAAS,CAAC;IAC7D,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAACH,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;EACpD;EAEAI,SAASA,CAAA;IACP,MAAMJ,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,aAAa,CAAC,SAAS,CAAC;IAC7D,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAACH,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC;EACnD;EACAK,UAAUA,CAAA;IACR,IAAIC,IAAI,GAAIxB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAuB,CAACC,KAAK;IAC7E,IAAIuB,KAAK,GAAIzB,QAAQ,CAACI,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAoB;IACrFqB,KAAK,CAACpB,KAAK,CAACqB,UAAU,GAAGF,IAAI;EAC/B;CAED;AAtCY9B,kBAAkB,GAAAiC,UAAA,EAL9BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWpC,kBAAkB,CAsC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}